name: CI/CD - Henkolu

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: waskylala/demo-app:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set commit short SHA
        id: vars
        run: echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

     - name: Set commit short SHA
  id: vars
  run: echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

- name: Build Docker image
  run: |
    IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/demo-app  # Define image name with DockerHub username
    docker build -t $IMAGE_NAME:${{ steps.vars.outputs.short_sha }} .

- name: Tag as latest if on master
  if: github.ref == 'refs/heads/master'
  run: |
    docker tag $IMAGE_NAME:${{ steps.vars.outputs.short_sha }} $IMAGE_NAME:latest

- name: Scan image with Trivy
  uses: aquasecurity/trivy-action@master
  with:
    image-ref: ${{ secrets.DOCKER_USERNAME }}/demo-app:${{ steps.vars.outputs.short_sha }}
    severity: CRITICAL,HIGH
    exit-code: 0  # Let the pipeline pass even if vulnerabilities are found

- name: Push image(s) to DockerHub
  run: |
    docker push $IMAGE_NAME:${{ steps.vars.outputs.short_sha }}
    if [ "${{ github.ref }}" == "refs/heads/master" ]; then
      docker push $IMAGE_NAME:latest
    fi

- name: Cleanup Docker
  run: docker system prune -af
